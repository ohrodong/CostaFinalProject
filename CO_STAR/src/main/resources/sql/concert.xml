<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Concert">

<!-- 
	<resultMap type="mem" id="memberMap">
		<result property="id" column="id" jdbcType="VARCHAR" />
		<result property="password" column="password" jdbcType="VARCHAR" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="address" column="address" jdbcType="VARCHAR" />
	</resultMap>
-->	 

	<insert id="addConcert" parameterType="concertVO">
		INSERT INTO Concert VALUES
		(
				#{concertId},
				#{concertName},
				TO_DATE(#{concertStartDate},'YYYY-MM-DD'),
				TO_DATE(#{concertEndDate},'YYYY-MM-DD'),
				#{concertFirstGenre},
				#{concertHall},
				#{concertArea},
				#{concertWebSite},
				#{concertViewAge},
				#{	concertRunningTime},
				#{concertNotice},
				#{concertCompany},
				#{concertActors},
				sysdate,
				#{concertUpdateTime},
				#{concertAverageRating},
				#{concertHits},
				#{memberVO.memberId}
		)
	</insert>
	
	<update id="updateConcert" parameterType="concertVO" >
		UPDATE Concert SET
			concertName=#{concertName},
			concertStartDate=TO_DATE(#{concertStartDate},'YYYY-MM-DD'),
			concertEndDate=TO_DATE(#{concertEndDate},'YYYY-MM-DD'),
			concertFirstGenre=#{concertFirstGenre},
			concertHall=#{concertHall},
			concertArea=#{concertArea},
			concertWebSite=#{concertWebSite},
			concertViewAge=#{concertViewAge},
			concertRunningTime=#{concertRunningTime},
			concertNotice=#{concertNotice},
			concertCompany=#{concertCompany},
			concertActors=#{concertActors},
			
			concertUpdateTime=sysdate,
			concertAverageRating=#{concertAverageRating},
			concertHits=#{concertHits},
			memberId=#{memberVO.memberId}
		WHERE concertId=#{concertId}
	</update>
	
	<delete id="deleteConcert" parameterType="string">
		DELETE FROM Concert WHERE concertId=#{concertId} 
	</delete>
	
	
	
	
	<sql id="select-concert">
		SELECT * FROM
	</sql>
	
	<sql id="whereorder-concert">
		WHERE sysdate BETWEEN  concertStartDate AND concertEndDate
		ORDER BY concertEndDate
	</sql>
	
	
	<select id="selectByConcertId" parameterType="string" resultType="concertVO">
		<include refid="select-concert"/>
		Concert
		WHERE concertId = #{value}
	</select>
	
	<select id="selectAll" resultType="concertVO">
			<include refid="select-concert"/>
			Concert
	</select>
	
	<select id="searchByConcertName" parameterType="string" resultType="concertVO">
		<include refid="select-concert"/>
		(<include refid="select-concert"/> Concert WHERE concertName LIKE '%'||#{value}||'%')
		<include refid="whereorder-concert"/>
	</select>

	<select id="searchByMonth" parameterType="int" resultType="concertVO">
			<include refid="select-concert"/> 
			(<include refid="select-concert"/> Concert WHERE 
		
		<![CDATA[ 
			TO_NUMBER(TO_CHAR(concertStartDate,'MM')) <= #{value}
			AND TO_NUMBER(TO_CHAR(concertEndDate,'MM')) >= #{value})
		]]>
			<include refid="whereorder-concert"/>
			
	</select>
	 
	
	<select id="searchByConcertAreaInIndexPage" parameterType="string" resultType="concertVO">
		<include refid="select-concert"/>
		(<include refid="select-concert"/> Concert WHERE concertArea LIKE '%'||#{value}||'%')
		<include refid="whereorder-concert"/>
	</select>
	
</mapper>



































