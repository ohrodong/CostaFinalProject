<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<properties resource="sql/jdbc.properties"></properties>
	<settings>
		<setting name="jdbcTypeForNull" value="NULL" />
	</settings>
	
	<typeAliases>
		<typeAlias type="com.costar.main.vo.ConcertVO" alias="concertVO" />
		<typeAlias type="com.costar.main.vo.ConcertCommentVO" alias="concertCommentVO" />
		<typeAlias type="com.costar.main.vo.ConcertSecondGenreVO" alias="concertSecondGenreVO"/>
		<typeAlias type="com.costar.main.vo.MemberVO" alias="memberVO" />
		<typeAlias type="com.costar.main.vo.NoticeVO" alias="noticeVO"/>
		<typeAlias type="com.costar.main.vo.NoteVO" alias="noteVO"/>
		<typeAlias type="com.costar.main.vo.FaqnaVO" alias="faqnaVO"/>
		<typeAlias type="com.costar.main.vo.HistoryBookmarkVO" alias="historyBookmarkVO"/>
	</typeAliases>
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC">
			</transactionManager>
			<dataSource type="UNPOOLED"><!-- UNPOLLED 드라이버 매니저 방식 -->
				<property name="driver" value="${JDBC.driver}" />
				<property name="url" value="${JDBC.url}" />
				<property name="username" value="${JDBC.username}" />
				<property name="password" value="${JDBC.pwd}" />
			</dataSource>
		</environment>
	</environments>
	<mappers>
		<mapper resource="sql/mybatis-userservice-mapping.xml" />
		<mapper resource="sql/concert.xml" />
		<mapper resource="sql/member.xml" />
		<mapper resource="sql/note.xml" />
		<mapper resource="sql/recommend.xml" />
		<mapper resource="sql/search.xml" />
		<mapper resource="sql/notice.xml" />
		<mapper resource="sql/faqna.xml" />
		<mapper resource="sql/comment.xml" />
		<mapper resource="sql/historybookmark.xml"/>
		<!-- 나중에 여기에 여러개의 매퍼들을 등록 할 수 있다. 일종의 와이어링이다. -->
<!-- 		<mapper resource="sql/mybatis-userservice-mapping01.xml" /> -->
	</mappers>


</configuration>