

http://blog.naver.com/PostView.nhn?blogId=killmewild&logNo=30147120065&redirect=Dlog&widgetTypeCall=true


Oracle SQL Loader를 이용해서 엑셀 파일을 오라클 DB로 만드는 방법 참조
http://www.allsoft.co.kr/bbs/board.php?bo_table=study4_2&wr_id=25

무결성 제약조건 기본키(PRIMARY KEY)/외래키(FOREIGN KEY)/UNIQUE/NOT NULL/CHECK  참조
http://ynebula38.tistory.com/65

primary key 추가 및 삭제 참조
http://beatz.tistory.com/279

PK, FK 생성 및 삭제방법 참조
http://blog.ohmynews.com/icorea77/234563#recentTrackback

Create Table 참조
http://bangganji.tistory.com/111

시퀀스 생성 추가 삭제 참조
http://deuxism.tistory.com/27
http://jaehoon0210.tistory.com/entry/oracle-sequence-%EC%83%9D%EC%84%B1-%EC%82%AD%EC%A0%9C-%EC%A1%B0%ED%9A%8C


제약조건 확인 참조
http://blog.daum.net/_blog/BlogTypeView.do?blogid=0qe3f&articleno=25&categoryId=6&regdt=20140917140356
http://egloos.zum.com/mostmax/v/3053351

계정 생성 및 권한 부여
http://warmz.tistory.com/755
http://runtoyourdream.tistory.com/138


http://highlighter.tistory.com/666
///////////////////////////////

CREATE USER "COSTAR"
IDENTIFIED BY "KOSTAR"
DEFAULT TABLESPACE SYSTEM
TEMPORARY TABLESPACE TEMP
PROFILE DEFAULT
ACCOUNT UNLOCK;

grant resource, connect to "COSTAR"; //이게 기본
grant DBA to "costa2";

///////////////////////////////
desc USER_CONSTRAINTS;
desc USER_CONS_COLUMNS;

테이블별 제약조건 확인.
set linesize 100 ;
set pagesize 100 ;
column owner format a13 ;
column constraint_name format a16 ;
column constraint_type format a18 ;
column table_name format a15 ;
column r_constraint_name format a18 ;
select owner,  table_name, constraint_name, constraint_type, r_constraint_name from user_constraints ;

컬럼별 제약조건 확인.
set linesize 100 ;
set pagesize 100 ;
column owner format a10
column table_name format a15
column column_name format a15
select * from user_cons_columns ;

모든 제약 조건 확인
SELECT  SUBSTR(A.COLUMN_NAME,1,15) COLUMN_NAME, DECODE(B.CONSTRAINT_TYPE, 'P','PRIMARY KEY', 'U','UNIQUE KEY', 'C','CHECK OR NOT NULL', 'R','FOREIGN KEY') CONSTRAINT_TYPE, A.CONSTRAINT_NAME　　 CONSTRAINT_NAME
        FROM　　USER_CONS_COLUMNS　 A,　 USER_CONSTRAINTS　 B　　 
        WHERE　 A.TABLE_NAME = UPPER('&table_name')　　 
            AND　 A.TABLE_NAME = B.TABLE_NAME　　 
            AND　 A.CONSTRAINT_NAME = B.CONSTRAINT_NAME　　 
        ORDER BY 1;

///////////////////////////////

테이블 그냥 삭제시 찌꺼기 없애기 위함
purge recyclebin;

///////////////////////////////

///////////////////////////////
테이블 삭제시 찌꺼기까지 같이 삭제 함 옵션 purge
과 포링키 지정 DDL구문 포함

///////////////////////////////

///////////////////////////////
테이블 삭제 구문
drop table Concert purge;
drop table ConcertImagePath purge;
drop table ConcertSecondGenre purge;
drop table Member purge;
drop table HistoryBookmark purge;
drop table ConcertComment purge;
drop table Note purge;
drop table Notice purge;
drop table Faqna purge;

commit;

///////////////////////////////
제약조건 삭제 구문
alter table Concert drop constraint fk_Concert_m;

alter table ConcertImagePath drop constraint fk_ConcertImagePath_c;

alter table ConcertSecondGenre drop constraint fk_ConcertSecondGenre_c;

alter table HistoryBookmark drop constraint fk_HistoryBookmark_c;
alter table HistoryBookmark drop constraint fk_HistoryBookmark_m;

alter table ConcertComment drop constraint fk_ConcertComment_c;
alter table ConcertComment drop constraint fk_ConcertComment_m;

alter table Note drop constraint fk_Note_m;

alter table Notice drop constraint fk_Notice_m;

alter table Faqna drop constraint fk_Faqna_m;

commit;

///////////////////////////////
시퀀스 조회
select * from user_sequences;
///////////////////////////////
시퀀스 값조회
select 시퀀스명.currval from dual;
select seq_ConcertImagePath.currval from dual;
select seq_ConcertSecondGenre.currval from dual;
select seq_Note_noteNo.currval from dual;
select seq_Notice_noticeNo.currval from dual;
select seq_ConcertSecondGenre.currval from dual; 

///////////////////////////////
시퀀스 삭제
drop sequence 시퀀스명;

drop sequence seq_ConcertImagePath;
drop sequence seq_ConcertSecondGenre;
drop sequence seq_Note;
drop sequence seq_Notice;
drop sequence seq_Faqna;

///////////////////////////////

alter에서 삭제시 바로 삭제 하기 위해서는 맨뒤에
 on delete cascade
을 붙인다. 예를 들면 자식테이블에 부모테이블의 값이 들어갈 경우 그럴경우는 저렇게 붙여줘야 한다.


///////////////////////////////

생성문 시작

create table Member(
memberId VARCHAR2(30) not null,
memberPw VARCHAR2(15) not null,
memberAddr VARCHAR2(100) not null,
memberTelNum VARCHAR2(12) not null,
memberCompanyNum VARCHAR2(12) not null,
memberAuthority number(5), 
memberArea VARCHAR2(10) not null,
memberGender VARCHAR2(10) not null,
memberBirthYear number(4),
memberAddDate date,
memberUpdateDate date,
constraint pk_Member primary key(memberId)
);

create table Concert(
concertId VARCHAR2(50) not null,
concertName VARCHAR2(100) not null,
concertStartDate date,
concertEndDate date,
concertFirstGenre VARCHAR2(10) not null,
concertHall VARCHAR2(20) not null,
concertArea VARCHAR2(10) not null,
concertWebSite VARCHAR2(50) not null,
concertViewAge VARCHAR2(10) not null,
concertRunningTime VARCHAR2(10) not null,
concertNotice VARCHAR2(500) not null,
concertCompany VARCHAR2(15) not null,
concertActors VARCHAR2(300) not null,
concertWriteTime date,
concertUpdateTime date,
concertAverageRating number(10) not null,
concertHits VARCHAR2(38) not null,
memberId VARCHAR2(30),
constraint pk_Concert primary key(concertId)
);

alter table Concert add constraint fk_Concert_m foreign key(memberId) references Member(memberId);


create table ConcertImagePath(
concertImagePathNo number(38),
concertId VARCHAR2(50) not null,
concertImagePath VARCHAR2(100) not null,
constraint pk_ConcertImagePath primary key(concertImagePathNo)
);

alter table ConcertImagePath add constraint fk_ConcertImagePath_c foreign key(concertId) references Concert(concertId);

CREATE SEQUENCE seq_ConcertImagePath
INCREMENT BY 1
START WITH 1
NOCYCLE
NOCACHE;


create  table ConcertSecondGenre(
concertSecondGenreNo number(38),
concertId VARCHAR2(50) not null,
concertSecondGenre VARCHAR2(10) not null,
constraint pk_ConcertSecondGenre primary key(concertSecondGenreNo)
);

alter table ConcertSecondGenre add constraint fk_ConcertSecondGenre_c foreign key(concertId) references Concert(concertId);

CREATE SEQUENCE seq_ConcertSecondGenre
INCREMENT BY 1
START WITH 1
NOCYCLE
NOCACHE;


create table HistoryBookmark(
concertId VARCHAR2(50) not null,
memberId VARCHAR2(30) not null,
historyBookmartIsBookmark number(1) not null,
constraint pk_HistoryBookmark primary key(concertId,memberId)
);

alter table HistoryBookmark add constraint fk_HistoryBookmark_c foreign key(concertId) references Concert(concertId);
alter table HistoryBookmark add constraint fk_HistoryBookmark_m foreign key(memberId) references Member(memberId);

create table ConcertComment(
concertId VARCHAR2(50) not null,
memberId VARCHAR2(30) not null,
concertCommentContent VARCHAR2(100) not null,
concertCommentWriteTime date,
concertCommentUpdateTime date,
concertCommentLike number(38),
concertCommentRating number(38),
constraint pk_ConcertComment primary key(concertId,memberId)
);

alter table ConcertComment add constraint fk_ConcertComment_c foreign key(concertId) references Concert(concertId);
alter table ConcertComment add constraint fk_ConcertComment_m foreign key(memberId) references Member(memberId);


create table Note(
noteNo number(38),
memberId VARCHAR2(30) not null,
noteTitle VARCHAR2(100) not null,
noteContent VARCHAR2(500) not null,
noteWriteTime date,
constraint pk_Note primary key(noteNo,memberId)
);

alter table Note add constraint fk_Note_m  foreign key(memberId) references Member(memberId);

CREATE SEQUENCE seq_Note
INCREMENT BY 1
START WITH 1
NOCYCLE
NOCACHE;


create  table Notice(
noticeNo number(38),
noticeTitle VARCHAR2(100) not null,
noticeContent VARCHAR2(500) not null,
noticeWriteTime date,
noticeUpdateTime date,
memberId VARCHAR2(30),
constraint pk_Notice primary key(noticeNo)
);

alter table Notice add constraint fk_Notice_m  foreign key(memberId) references Member(memberId);

CREATE SEQUENCE seq_Notice
INCREMENT BY 1
START WITH 1
NOCYCLE
NOCACHE;


create  table Faqna(
faqnaNo number(38),
faqnaTitle VARCHAR2(100) not null,
faqnaContent VARCHAR2(100) not null,
faqnaCategory VARCHAR2(50) not null,
faqnaWriteTime date,
faqnaUpdateTime date,
memberId VARCHAR2(30),
constraint pk_Faqna primary key(faqnaNo)
); 

alter table Faqna add constraint fk_Faqna_m  foreign key(memberId) references Member(memberId);

CREATE SEQUENCE seq_Faqna
INCREMENT BY 1
START WITH 1
NOCYCLE
NOCACHE;


commit;

